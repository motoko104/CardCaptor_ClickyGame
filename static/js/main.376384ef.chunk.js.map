{"version":3,"sources":["components/Cards/Card.js","components/Nav/Nav.js","components/Wrapper/Wrapper.js","components/Title/Title.js","components/CardArea/CardArea.js","App.js","index.js"],"names":["Card","props","className","value","id","onClick","handleClicked","alt","name","src","image","Nav","href","title","message","score","topScore","Wrapper","children","Title","CardArea","App","state","charas","clicked","indexOf","setState","handleIncrease","concat","handleReset","updateScore","shuffle","shuffledCards","arr","i","length","j","Math","floor","random","shuffleCards","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"y/EAeeA,G,MAZF,SAAAC,GAAK,OACd,yBACIC,UAAU,OACVC,MAAOF,EAAMG,GACbC,QAAS,kBAAMJ,EAAMK,cAAcL,EAAMG,MAEzC,yBAAKF,UAAU,cACX,yBAAKK,IAAKN,EAAMO,KAAMC,IAAKR,EAAMS,YCM9BC,G,MAbH,SAAAV,GAAK,OACb,6BACI,4BACI,wBAAIC,UAAU,cACV,uBAAGU,KAAK,iBAAiBX,EAAMY,QAEnC,wBAAIT,GAAG,OAAOH,EAAMa,SACpB,wBAAIV,GAAG,OAAP,+CAAuBH,EAAMc,OAC7B,wBAAIX,GAAG,WAAP,yCAA0BH,EAAMe,cCN7BC,G,MAFC,SAAAhB,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAMiB,YCE1CC,G,MAFD,SAAAlB,GAAK,OAAI,wBAAIC,UAAU,SAASD,EAAMiB,YCIrCE,G,MAJE,SAAAnB,GAAK,OAClB,yBAAKC,UAAU,YAAYD,EAAMiB,Y,iBCkGtBG,E,2MAnFXC,MAAQ,CACJC,SACAR,MAAO,EACPC,SAAU,EACVF,QAAS,GACTU,QAAS,I,EAGblB,cAAgB,SAAAF,IAC2B,IAApC,EAAKkB,MAAME,QAAQC,QAAQrB,IAC1B,EAAKsB,SAAS,CACVZ,QAAQ,KAEZ,EAAKa,iBACL,EAAKD,SAAS,CAAEF,QAAS,EAAKF,MAAME,QAAQI,OAAOxB,MAEnD,EAAKyB,e,EAIbF,eAAiB,WACb,IAAMG,EAAc,EAAKR,MAAMP,MAAQ,EACvC,EAAKW,SAAS,CACVX,MAAOe,IAEPA,GAAe,EAAKR,MAAMN,SAC1B,EAAKU,SAAS,CAAEV,SAAUc,IAEL,KAAhBA,GACL,EAAKJ,SAAS,CAAEZ,QAAS,uEAE7B,EAAKiB,W,EAGTF,YAAc,WACV,EAAKH,SAAS,CACVX,MAAO,EACPC,SAAU,EAAKM,MAAMN,SACrBF,QAAS,iCACTU,QAAS,KAEb,EAAKO,W,EAGTA,QAAU,WACN,IAAIC,EAvDZ,SAAsBC,GAClB,IAAI,IAAIC,EAAID,EAAIE,OAAQ,EAAGD,EAAI,EAAGA,IAAI,CAClC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADN,EAEf,CAACD,EAAIG,GAAIH,EAAIC,IAA/BD,EAAIC,GAF6B,KAEzBD,EAAIG,GAFqB,KAItC,OAAOH,EAkDiBO,CAAajB,GACjC,EAAKG,SAAS,CAAEH,OAAQS,K,wEAGlB,IAAD,OACL,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CACInB,MAAM,6EACNE,MAAO0B,KAAKnB,MAAMP,MAClBC,SAAUyB,KAAKnB,MAAMN,SACrBF,QAAS2B,KAAKnB,MAAMR,UAGxB,kBAAC,EAAD,qQAC+C,6BAC3C,wGAGJ,kBAAC,EAAD,KACK2B,KAAKnB,MAAMC,OAAOmB,KAAI,SAAAnB,GAAM,OACzB,kBAAC,EAAD,CACIoB,IAAKpB,EAAOnB,GACZE,cAAe,EAAKA,cACpBqB,eAAgB,EAAKA,eACrBE,YAAa,EAAKA,YAClBE,QAAS,EAAKA,QACd3B,GAAImB,EAAOnB,GACXM,MAAOa,EAAOb,iB,GA3ExBkC,aCZlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.376384ef.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n    <div\n        className=\"card\"\n        value={props.id}\n        onClick={() => props.handleClicked(props.id)}\n    >\n        <div className=\"image-spot\">\n            <img alt={props.name} src={props.image} />\n        </div>\n    </div>\n);\n\nexport default Card;","import React from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = props => (\n    <nav>\n        <ul>\n            <li className=\"titleSpace\">\n                <a href=\"/clicky-game/\">{props.title}</a>\n            </li>\n            <li id=\"msg\">{props.message}</li>\n            <li id=\"scr\">あなたのスコア: {props.score}</li>\n            <li id=\"top-scr\">トップスコア: {props.topScore}</li>\n        </ul>\n    </nav>\n);\n\nexport default Nav;","import React from \"react\";\nimport\"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;","import React from \"react\";\nimport \"./CardArea.css\";\n\nconst CardArea = props => (\n    <div className=\"cardArea\">{props.children}</div>\n);\n\nexport default CardArea;","import React, { Component } from 'react';\nimport Card from \"./components/Cards\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport CardArea from \"./components/CardArea\";\nimport charas from \"./characters.json\";\nimport './App.css';\n\nfunction shuffleCards(arr) {\n    for(let i = arr.length -1; i > 0; i--){\n        let j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nclass App extends Component {\n    //setting this.state\n    state = {\n        charas,\n        score: 0,\n        topScore: 0,\n        message: \"\",\n        clicked: []\n    };\n\n    handleClicked = id =>{\n        if(this.state.clicked.indexOf(id) === -1){\n            this.setState({\n                message:\"\"\n            });\n            this.handleIncrease();\n            this.setState({ clicked: this.state.clicked.concat(id) });\n        }else {\n            this.handleReset();\n        }\n    };\n\n    handleIncrease = () => {\n        const updateScore = this.state.score + 1;\n        this.setState({\n            score: updateScore,\n        });\n        if (updateScore >= this.state.topScore) {\n            this.setState({ topScore: updateScore });\n        }\n        else if (updateScore === 12) {\n            this.setState({ message: \"おめでとうございます！\"});\n        }\n        this.shuffle();\n    };\n\n    handleReset = () => {\n        this.setState({\n            score: 0,\n            topScore: this.state.topScore,\n            message: \"もう一同！\",\n            clicked: []\n        });\n        this.shuffle();\n    };\n\n    shuffle = () => {\n        let shuffledCards = shuffleCards(charas);\n        this.setState({ charas: shuffledCards }); \n    };\n\n    render() {\n        return (\n            <Wrapper>\n                <Nav\n                    title=\"クロウカードのシャッフル!!\"\n                    score={this.state.score}\n                    topScore={this.state.topScore}\n                    message={this.state.message}\n                />\n\n                <Title>\n                    はじめましょう!　カードをクリックしますが、同じカードを二回クリックしないでください。<br/>\n                    <small>Lets begin! Click on a card, but don't click on the same card twice.</small>\n                </Title>\n\n                <CardArea>\n                    {this.state.charas.map(charas => (\n                        <Card\n                            key={charas.id}\n                            handleClicked={this.handleClicked}\n                            handleIncrease={this.handleIncrease}\n                            handleReset={this.handleReset}\n                            shuffle={this.shuffle}\n                            id={charas.id}\n                            image={charas.image}\n                        />\n                    ))}\n                </CardArea>\n            </Wrapper>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}